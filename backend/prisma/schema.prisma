generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum ReportStatus {
  OPEN
  UNDER_REVIEW
  RESOLVED
}

model User {
  id               String     @id @default(uuid())
  email            String     @unique
  password         String
  name             String
  phoneNumber      String
  role             Role       @default(USER)
  profilePicture   String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  listings         Vehicle[]
  favorites        Favorite[]
  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
  reports          Report[]   @relation("UserReports")
}

model Vehicle {
  id           String         @id @default(uuid())
  sellerId     String
  seller       User           @relation(fields: [sellerId], references: [id])
  brand        String
  model        String
  title        String
  price        Float
  mileage      Int
  year         Int
  fuelType     String
  transmission String
  enginePower  Int
  drivetrain   String
  color        String
  description  String
  location     Json
  isSecondHand Boolean
  photos       VehiclePhoto[]
  favorites    Favorite[]
  reports      Report[]       @relation("VehicleReports")
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model VehiclePhoto {
  id        String  @id @default(uuid())
  vehicleId String
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  photoUrl  String
}

model Favorite {
  id        String   @id @default(uuid())
  userId    String
  vehicleId String
  user      User     @relation(fields: [userId], references: [id])
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  createdAt DateTime @default(now())
}

model Message {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  vehicleId  String?
  content    String
  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model Report {
  id         String       @id @default(uuid())
  reporterId String
  listingId  String
  reason     String
  status     ReportStatus @default(OPEN)
  createdAt  DateTime     @default(now())
  reporter   User         @relation("UserReports", fields: [reporterId], references: [id])
  listing    Vehicle      @relation("VehicleReports", fields: [listingId], references: [id])
}
